using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace тема2
{
    public partial class Topic6Test1 : Form
    {
        private int n = 0;
        private int points = 0;
        private String[] questions = new string[10] {
                "Какую систему компенсации предпочтительнее\n"+"использовать для мотивации IT-специалистов?",
                "Какую роль играют нематериальные бонусы\n"+"в системе стимулирования IT-персонала?",
                "Как лучше всего использовать бонусы для\n"+"поощрения результативности?",
                "Какой подход к компенсации считается наиболее\n"+"эффективным для удержания талантов в IT-сфере?",
                "Какую стратегию следует выбрать для мотивации сотрудников\n"+"на участие в долгосрочных проектах?",
                "Как наиболее эффективно стимулировать сотрудников,\n"+"работающих удаленно?",
                "Какую роль в системе стимулирования играют опционы\n"+"на акции компании для IT-специалистов?",
                "Как лучше всего мотивировать сотрудников через систему\n"+"компенсации в условиях жесткой конкуренции на рынке IT?",
                "Какую роль в системе стимулирования играет обеспечение\n"+"сотрудников социальными пакетами?",
                "Как лучше всего стимулировать командную работу\n"+"в рамках системы компенсации?"};
        private String[] answer1 = new string[10] {
            "Фиксированная зарплата без бонусов и премий",
            "Нематериальные бонусы не важны,\n"+"если зарплата достаточно высокая",
            "Не выплачивать бонусы, если сотрудники получают\n"+"высокую зарплату",
            "Предлагать высокую начальную зарплату, но без\n"+"перспективы роста",
            "Не предоставлять никаких дополнительных вознаграждений,\n"+"если проект является частью обязанностей сотрудников",
            "Установить четкий график и контролировать его выполнение,\n"+"не предлагая дополнительных бонусов",
            "Опционы на акции не важны для сотрудников, если они\n"+"получают хорошие зарплаты",
            "Ограничиваться стандартной зарплатой, ориентируясь\n"+"на рыночный уровень",
            "Социальные пакеты не играют значительной роли\n"+"в мотивации сотрудников",
            "Выплачивать бонусы только за индивидуальные достижения",
        };
        private String[] answer2 = new string[10] {
            "Бонусная система, где сотрудники получают\n"+"вознаграждение только за выполнение конкретных задач",
            "Они могут быть полезными, но не влияют на мотивацию\n"+"так сильно, как финансовое вознаграждение",
            "Выплачивать бонусы только в конце года по итогам работы",
            "Внедрять разовые премии вместо увеличения зарплаты",
            "Ежегодные бонусы, основанные на коллективных результатах проекта",
            "Платить фиксированную зарплату независимо от результатов,\n"+"полагаясь на самоорганизацию сотрудников",
            "Опционы могут быть интересны, но их недостаточно\n"+"для повышения вовлеченности",
            "Повышать зарплату до уровня выше среднего рынка",
            "Социальные пакеты полезны, но менее важны,\n"+"чем зарплата и бонусы",
            "Оплачивать только результативность лидера команды,\n"+"без учета вклада других сотрудников",
        };
        private String[] answer3 = new string[10] {
            "Комбинированная система: фиксированная зарплата\n"+"плюс бонусы за достижения",
            "Нематериальные бонусы, такие как признание, возможности обучения\n"+"и гибкий график, часто имеют важное значение для сотрудников",
            "Предоставлять бонусы за достижение конкретных\n"+"краткосрочных целей",
            "Предлагать конкурентную зарплату с возможностями\n"+"регулярных пересмотров и карьерного роста",
            "Долгосрочные бонусы за успешное завершение проектов\n"+"и достижения ключевых вех",
            "Предоставить сотрудникам гибкий график, доверяя им в выборе\n"+"рабочего времени, а также поддерживать регулярную обратную связь",
            "Это важный инструмент, который мотивирует сотрудников\n"+"на долгосрочную лояльность к компании",
            "Предоставлять индивидуальные премии за личные достижения,\n"+"а также конкурентные пакеты компенсаций",
            "Это важный фактор, который усиливает общую привлекательность\n"+"компании и стимулирует лояльность",
            "Предоставлять коллективные бонусы за командные результаты,\n"+"дополнительно поощряя вклад каждого участника",
        };
        public Topic6Test1()
        {
            InitializeComponent();
            label3.Hide();
            groupBox1.Hide();
            button2.Hide();
            button3.Hide();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            label2.Text = (n + 1).ToString() + "/10";
            button1.Hide();
            label3.Visible = true;
            label3.Text = questions[n];
            radioButton1.Text = answer1[n];
            radioButton2.Text = answer2[n];
            radioButton3.Text = answer3[n];
            groupBox1.Visible = true;
            button2.Visible = true;
            n++;
        }
        private void ShowAnswer(int p)
        {
            label2.Hide();
            groupBox1.Hide();
            button2.Hide();
            if (points <= 5)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваши подходы к компенсации и стимулированию требуют доработки.\n" +
                "Обратите внимание на важность нематериальных бонусов,\n" +
                "возможностей карьерного роста и гибких условий труда.";
            }
            else if (points >= 6 && points <= 12)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "У вас есть некоторые эффективные стратегии, но стоит\n" +
                "пересмотреть подходы к компенсации для долгосрочной\n" +
                "мотивации и удержания сотрудников";
            }
            else if (points >= 13 && points <= 16)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваши методы компенсации и стимулирования уже работают неплохо,\n"
                + "но можно усилить акцент на коллективных бонусах и долгосрочных\n" +
                "мотивационных программах";
            }
            else if (17 <= points && points <= 20)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                    "Ваша система компенсации и стимулирования на высоком уровне,\n" +
                    "и вы эффективно поддерживаете как мотивацию сотрудников,\n" +
                    "так и их долгосрочную лояльность.";
            }
            button3.Visible = true;
        }
        private void NextQuestion(int num)
        {
            if (num < 10)
            {
                label2.Text = (n + 1).ToString() + "/10";
                label3.Text = questions[n];
                radioButton1.Text = answer1[n];
                radioButton2.Text = answer2[n];
                radioButton3.Text = answer3[n];
            }
            if (num == 10)
                ShowAnswer(points);
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            n++;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (!radioButton1.Checked && !radioButton2.Checked && !radioButton3.Checked)
            {
                MessageBox.Show("Выберите один из вариантов ответа");
                return;
            }
            if (radioButton1.Checked)
            {
                NextQuestion(n);
            }
            else if (radioButton2.Checked)
            {
                points++;
                NextQuestion(n);
            }
            else if (radioButton3.Checked)
            {
                points = points + 2;
                NextQuestion(n);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            this.Hide();
            Topic5Test2 test2 = new Topic5Test2();
            test2.Show();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();
            MainWindow main = new MainWindow();
            main.Show();
        }
    }
}
