using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace тема2
{
    public partial class Topic5Test2 : Form
    {
        private int n = 0;
        private int points = 0;
        private String[] questions = new string[10] {
                "Как лучше всего структурировать бонусы для сотрудников,\n"+"работающих над инновационными проектами?",
                "Какой элемент компенсации наиболее эффективен для повышения\n"+"удовлетворенности сотрудников?",
                "Какую роль играют дополнительные льготы, такие как гибкий график\n"+"и возможность удаленной работы, в системе компенсации?",
                "Как можно использовать опционы на акции компании для стимулирования\n"+"долгосрочной лояльности сотрудников?",
                "Как лучше всего мотивировать сотрудников через систему премий\n"+"в условиях нестабильности рынка?",
                "Какой подход лучше всего использовать для системы компенсации\n"+"в стартапе, где ресурсы ограничены?",
                "Какой элемент системы вознаграждений наиболее эффективен\n"+"для поддержания мотивации сотрудников в условиях частых изменений?",
                "Какую роль играют возможности профессионального роста\n"+"и обучения в системе компенсации?",
                "Какую стратегию следует выбрать для системы стимулирования\n"+"в условиях высокой текучести кадров?",
                "Как лучше всего оценивать эффективность системы\n"+"компенсации и стимулирования?"};
        private String[] answer1 = new string[10] {
            "Не предлагать бонусы, если проект является частью\n"+"регулярных обязанностей",
            "Разовые премии за завершение трудных задач",
            "Льготы не играют большой роли, если зарплата конкурентоспособна",
            "Предоставлять опционы только новым сотрудникам",
            "Не выплачивать премии, полагаясь на основную зарплату\n"+"как основной стимул",
            "Не предлагать дополнительных бонусов, полагаясь только на зарплату",
            "Увеличение рабочего времени для достижения новых целей",
            "Обучение и рост не являются значительными факторами мотивации",
            "Не предлагать дополнительные вознаграждения, надеясь\n"+"на естественное снижение текучести",
            "Анализировать только финансовые показатели компании\n"+"без учета мнений сотрудников",
        };
        private String[] answer2 = new string[10] {
            "Выплачивать фиксированную премию только после завершения проекта",
            "Временные надбавки за переработку",
            "Льготы полезны, но не так важны, как финансовые вознаграждения",
            "Использовать опционы для краткосрочного стимулирования\n"+"при выполнении специфических задач",
            "Выплачивать стабильные премии независимо от результатов работы",
            "Сосредоточиться на конкурентной зарплате без дополнительных льгот",
            "Регулярные пересмотры зарплаты без учета изменений в работе",
            "Возможности роста и обучения имеют второстепенное\n"+"значение по сравнению с финансовыми вознаграждениямии",
            "Повышать зарплату для всех сотрудников,\n"+"чтобы уменьшить текучесть",
            "Оценивать эффективность только на основе внешних\n"+"рыночных данных и сравнений",
        };
        private String[] answer3 = new string[10] {
            "Устанавливать промежуточные бонусы за выполнение\n"+"ключевых этапов проекта",
            "Конкурентные зарплаты и возможность получения\n"+"регулярных повышений",
            "Эти льготы могут значительно повысить привлекательность\n"+"работы и удовлетворенность сотрудников",
            "Предлагать опционы как часть общего пакета вознаграждений,\n"+"что способствует долгосрочной мотивации",
            "Вводить премии, зависящие от достижения определенных\n"+"целей и результатов",
            "Предлагать частичные бонусы и компенсации в виде долей в компании",
            "Программа поощрения за адаптивность и быстрое освоение\n"+"новых технологий",
            "Это важный фактор, способствующий долгосрочной\n"+"мотивации и развитию сотрудников",
            "Внедрить программу бонусов за удержание и лояльность, предоставляя\n"+"дополнительные вознаграждения за долгосрочную работу",
            "Проводить регулярные опросы сотрудников для получения их отзывов\n"+"о системе вознаграждений",
        };
        public Topic5Test2()
        {
            InitializeComponent();
            label3.Hide();
            groupBox1.Hide();
            button2.Hide();
            button3.Hide();
        }
        private void Button1_Click(object sender, EventArgs e)
        {
            label2.Text = (n + 1).ToString() + "/10";
            Button1.Hide();
            label3.Visible = true;
            label3.Text = questions[n];
            radioButton1.Text = answer1[n];
            radioButton2.Text = answer2[n];
            radioButton3.Text = answer3[n];
            groupBox1.Visible = true;
            button2.Visible = true;
            n++;
        }
        private void ShowAnswer(int p)
        {
            label2.Hide();
            groupBox1.Hide();
            button2.Hide();
            if (points <= 10)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваши методы компенсации и стимулирования требуют доработки.\n" +
                "Необходимо улучшить баланс между финансовыми и нематериальными\n"+
                "вознаграждениями и учитывать потребности сотрудников.";
            }
            else if (points >= 11 && points <= 20)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "У вас есть несколько эффективных подходов, но стоит\n"+
                "уделить больше внимания профессиональному росту,\n"+
                "дополнительным льготам и обратной связи от сотрудников";
            }
            else if (points >= 21 && points <= 30)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваши методы компенсации и стимулирования хорошо проработаны,\n"+
                "но можно усилить акцент на долгосрочной мотивации\n"+
                "и профессиональном развитии";
            }
            else if (points >= 31 && points <= 40)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваша система компенсации и стимулирования на высоком уровне,\n"+
                "и вы эффективно поддерживаете мотивацию и лояльность\n"+
                "сотрудников через разнообразные и целенаправленные подходы.";
            }
            button3.Visible = true;
        }
        private void NextQuestion(int num)
        {
            if (num < 10)
            {
                label2.Text = (n + 1).ToString() + "/10";
                label3.Text = questions[n];
                radioButton1.Text = answer1[n];
                radioButton2.Text = answer2[n];
                radioButton3.Text = answer3[n];
            }
            if (num == 10)
                ShowAnswer(points);
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            n++;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (!radioButton1.Checked && !radioButton2.Checked && !radioButton3.Checked)
            {
                MessageBox.Show("Выберите один из вариантов ответа");
                return;
            }
            if (radioButton1.Checked)
            {
                NextQuestion(n);
            }
            else if (radioButton2.Checked)
            {
                points++;
                NextQuestion(n);
            }
            else if (radioButton3.Checked)
            {
                points = points + 2;
                NextQuestion(n);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            this.Hide();
            Topic5Test3 test3 = new Topic5Test3();
            test3.Show();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();
            MainWindow main = new MainWindow();
            main.Show();
        }
    }
}
