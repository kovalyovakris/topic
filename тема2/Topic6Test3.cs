using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace тема2
{
    public partial class Topic6Test3 : Form
    {
        private int n = 0;
        private int points = 0;
        private String[] questions = new string[10] {
                "Какой первичный шаг следует предпринять при работе с \n"+"сотрудником, который систематически нарушает правила команды?",
                "Как лучше всего подходить к решению проблемы, если \n"+"сотрудник не справляется с поставленными задачами?",
                "Какой метод наиболее эффективен для изменения,\n"+"негативного отношения сотрудника к своей работе?",
                "Как лучше всего отслеживать и оценивать прогресс сотрудника,\n"+"который работает над улучшением своей производительности?",
                "Как следует поступить, если сотрудник систематически \n"+"опаздывает на работу?",
                "Какой подход лучше всего использовать для поддержки сотрудника, который \n"+"испытывает трудности в выполнении работы из-за личных проблем?",
                "Какую роль играет создание четкого и справедливого \n"+"процесса для решения проблемных ситуаций?",
                "Как лучше всего справляться с ситуацией, когда \n"+"сотрудник не принимает критику конструктивно?",
                "Какой метод лучше всего использовать для обеспечения\n"+"того, чтобы сотрудник понял важность выполнения своих обязанностей?",
                "Как следует действовать, если проблемы с сотрудником \n"+"продолжаются, несмотря на все предпринятые усилия?"
        };
        private String[] answer1 = new string[10] {
            "Наложить немедленное наказание, чтобы предотвратить повторение",
            "Дать сотруднику время для самостоятельного исправления\n"+"ситуации без дополнительной поддержки",
            "Применять наказания за негативное отношение",
            "Проводить периодические проверки без регулярного мониторинга",
            "Игнорировать опоздания, если это не влияет на работу команды",
            "Игнорировать личные проблемы и сосредоточиться только \n"+" на рабочих результатах",
            "Процесс не имеет большого значения, если результаты \n"+" являются основным приоритетом",
            "Продолжать давать критику, не обращая внимания на реакцию сотрудника",
            "Дать сотруднику свободу в выполнении задач без строгих требований",
            "Продолжить работу с сотрудником без внесения изменений, \n"+"полагаясь на улучшение ситуации со временем",
        };
        private String[] answer2 = new string[10] {
            "Сообщить команде о нарушении, чтобы создать давление на сотрудника" ,
            "Переassignировать задачи сотруднику и увеличить рабочую нагрузку",
            "Игнорировать отношение сотрудника и сосредоточиться \n"+"на выполнении его задач",
            "Оценивать прогресс только по итогам выполнения крупного проекта",
            "Установить строгие правила и штрафы за опоздания, \n"+"без обсуждения с сотрудником",
            "Потребовать, чтобы сотрудник решал личные проблемы \n"+"вне рабочее время, не предлагая поддержки",
            "Процесс решения проблем может быть гибким и изменчивым \n"+"в зависимости от ситуации",
            "Прекратить давать критические замечания и сосредоточиться \n"+"на положительных аспектах работыя",
            "Периодически напоминать сотруднику о его обязанностях\n"+"без конкретных целей",
            "Завершить сотрудничество с сотрудником, не рассматривая \n"+"другие варианты",
        };
        private String[] answer3 = new string[10] {
            "Провести индивидуальную беседу с сотрудником для выяснения \n"+"причин нарушения правил",
            "Предложить дополнительные ресурсы или помощь, чтобы помочь\n"+" сотруднику улучшить результаты",
            "Обсудить с сотрудником причины его негативного отношения \n"+"и предложить пути решения",
            "Установить регулярные встречи и отчеты для отслеживания \n"+"прогресса и предоставления обратной связи",
            "Обсудить с сотрудником последствия опозданий и предложить \n"+"решения для улучшения его пунктуальности",
            "Предложить гибкий график или временную помощь, чтобы помочь\n"+" сотруднику справиться с трудностями",
            "Четкий процесс помогает обеспечить справедливость и \n"+"последовательность при решении проблемных ситуаций",
            "Попробовать изменить подход к критике, делая ее более \n"+"конструктивной и конкретной",
            "Установить четкие и измеримые цели и регулярно проверять\n"+" их выполнение",
            "Оценить возможности для изменения роли сотрудника или \n"+"его задач, чтобы найти более подходящую позицию"
        };
        public Topic6Test3()
        {
            InitializeComponent();
            label3.Hide();
            groupBox1.Hide();
            button2.Hide();
        }
        private void Button1_Click(object sender, EventArgs e)
        {
            label2.Text = (n + 1).ToString() + "/10";
            Button1.Hide();
            label3.Visible = true;
            label3.Text = questions[n];
            radioButton1.Text = answer1[n];
            radioButton2.Text = answer2[n];
            radioButton3.Text = answer3[n];
            groupBox1.Visible = true;
            button2.Visible = true;
            n++;
        }
        private void ShowAnswer(int p)
        {
            label2.Hide();
            groupBox1.Hide();
            button2.Hide();
            if (points <= 6)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Вам следует пересмотреть методы управления проблемными\n"+
                "сотрудниками, сосредоточив внимание на конструктивной\n"+
                "коммуникации и поддержке";
            }
            else if (points >= 7 && points <= 12)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "У вас есть несколько правильных подходов, но стоит\n"+
                "улучшить стратегии и методы для более эффективного\n"+
                "управления проблемами";
            }
            else if (points >= 13 && points <= 18)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Вы применяете эффективные методы управления, но всегда\n"+
                "можно найти способы для дополнительного улучшения подходов";
            }
            else if (points >= 19 && points <= 24)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Ваши методы управления проблемными сотрудниками хорошо\n"+
                "проработаны и эффективно решают проблемы, поддерживая\n"+
                "продуктивность и командный дух";
            }
        }
        private void NextQuestion(int num)
        {
            if (num < 10)
            {
                label2.Text = (n + 1).ToString() + "/10";
                label3.Text = questions[n];
                radioButton1.Text = answer1[n];
                radioButton2.Text = answer2[n];
                radioButton3.Text = answer3[n];
            }
            if (num == 10)
                ShowAnswer(points);
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            n++;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (!radioButton1.Checked && !radioButton2.Checked && !radioButton3.Checked)
            {
                MessageBox.Show("Выберите один из вариантов ответа");
                return;
            }
            if (radioButton1.Checked)
            {
                NextQuestion(n);
            }
            else if (radioButton2.Checked)
            {
                points++;
                NextQuestion(n);
            }
            else if (radioButton3.Checked)
            {
                points = points + 2;
                NextQuestion(n);
            }
        }


        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();
            MainWindow main = new MainWindow();
            main.Show();
        }
    }
}
