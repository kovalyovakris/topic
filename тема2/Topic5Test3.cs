using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace тема2
{
    public partial class Topic5Test3 : Form
    {
        private int n = 0;
        private int points = 0;
        private String[] questions = new string[10] {
                "Как лучше всего структурировать систему премирования для IT-команды,\n"+"pаботающей над проектом с четкими сроками?",
                "Какой подход наиболее эффективен для стимулирования сотрудников,\n"+"работающих над инновационными разработками?",
                "Какую роль играют регулярные пересмотры заработной платы\n"+"в системе компенсации?",
                "Как лучше всего использовать систему опционов для привлечения\n"+"талантливых сотрудников?",
                "Какой метод стимулирования будет наиболее эффективным\n"+"для удержания сотрудников в условиях быстро меняющегося рынка?",
                "Как лучше всего компенсировать сотрудников за работу\n"+"в выходные и праздничные дни?",
                "Какую роль играют корпоративные мероприятия и тимбилдинги\n"+"в системе стимулирования?",
                "Как лучше всего управлять системой вознаграждений для сотрудников,\n"+"работающих над проектами с высокой степенью неопределенности?",
                "Какую стратегию следует использовать для компенсации сотрудников,\n"+"работающих над многозадачными проектами?",
                "Как можно улучшить систему компенсации для сотрудников,\n"+"которые работают над долгосрочными проектами?"
        };
        private String[] answer1 = new string[10] {
            "Не предлагать премии, если проект является частью обычной работы",
            "Не предоставлять дополнительных вознаграждений за инновации,\n"+"полагаясь на основную зарплату",
            "Пересмотры зарплаты не нужны, если зарплата изначально высокая",
            "Не использовать опционы в системе компенсации, полагаясь\n"+"только на денежные вознаграждения",
            "Увеличивать рабочее время и требования для повышения\n"+"продуктивности",
            "Оплачивать работу в выходные дни по обычной ставке",
            "Корпоративные мероприятия не имеют значительного\n"+"влияния на мотивацию",
            "Не предлагать бонусов, сосредоточив внимание\n"+"на основной зарплате",
            "Не предоставлять дополнительные вознаграждения за многозадачность",
            "Не предлагать никаких дополнительных вознаграждений\n"+"за долгосрочные проекты",
        };
        private String[] answer2 = new string[10] {
            "Предоставлять премии только после завершения проекта",
            "Выплачивать бонусы за количество созданных идей,\n"+"независимо от их реализации",
            "Пересмотры зарплаты не так важны, если есть дополнительные\n"+"бонусы и премии",
            "Предлагать опционы только для топ-менеджеров\n"+"и ключевых специалистов",
            "Предлагать бонусы за достижения и результаты работы",
            "Предлагать небольшие бонусы за работу в выходные дни",
            "Тимбилдинги полезны, но не так важны, как финансовое\n"+"вознаграждение",
            "Предлагать фиксированные бонусы за выполнение задач,\n"+"несмотря на неопределенность",
            "Выплачивать бонусы за количество выполненных задач",
            "Предоставлять одноразовую премию в конце проекта",
        };
        private String[] answer3 = new string[10] {
            "Устанавливать промежуточные премии за выполнение\n"+"ключевых этапов и достижение определенных результатов",
            "Предлагать премии за успешную реализацию и внедрение\n"+"инновационных идей в продукцию",
            "Регулярные пересмотры зарплаты помогают поддерживать\n"+"мотивацию сотрудников, учитывая их рост и достижения",
            "Включать опционы в пакеты вознаграждений для всех сотрудников,\n"+"чтобы стимулировать долгосрочную лояльность",
            "Создавать возможности для профессионального роста и обучения,\n"+"что поможет адаптироваться к изменениям",
            "Предоставлять двойную оплату или дополнительные выходные дни\n"+"в обмен на работу в праздничные дни",
            "Они способствуют укреплению командного духа и повышению\n"+"мотивации сотрудников",
            "Устанавливать бонусы и вознаграждения на основе достигнутых\n"+"результатов и успешных решений проблем",
            "Предоставлять премии за успешное выполнение всех задач\n"+"в рамках одного проекта",
            "Предлагать регулярные маленькие бонусы за промежуточные\n"+"результаты и достижения"
        };
        public Topic5Test3()
        {
            InitializeComponent();
            label3.Hide();
            groupBox1.Hide();
            button2.Hide();
        }
        private void Button1_Click(object sender, EventArgs e)
        {
            label2.Text = (n + 1).ToString() + "/10";
            Button1.Hide();
            label3.Visible = true;
            label3.Text = questions[n];
            radioButton1.Text = answer1[n];
            radioButton2.Text = answer2[n];
            radioButton3.Text = answer3[n];
            groupBox1.Visible = true;
            button2.Visible = true;
            n++;
        }
        private void ShowAnswer(int p)
        {
            label2.Hide();
            groupBox1.Hide();
            button2.Hide();
            if (points <= 6)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Ваши методы компенсации и стимулирования нуждаются в улучшении.\n"+
                "Рассмотрите возможность внедрения промежуточных бонусов\n"+
                "и дополнительных льгот для повышения мотивации";
            }
            else if (points >= 7 && points <= 12)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "У вас есть некоторые эффективные подходы, но стоит\n"+
                "обратить внимание на элементы, которые могут улучшить\n"+
                "долгосрочную мотивацию и адаптацию к изменениям";
            }
            else if (points >= 13 && points <= 18)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Ваши методы компенсации и стимулирования уже показывают\n"+
                "хорошие результаты, но можно усилить акцент на инновации,\n"+
                "профессиональном росте и регулярных вознаграждениях";
            }
            else if (points >= 19 && points <= 24)
            {
                label3.Text = $"Ваш результат: {points} баллов\n" +
                "Ваша система компенсации и стимулирования очень\n"+
                "хорошо разработана, эффективно поддерживает мотивацию\n"+
                "сотрудников и способствует их долгосрочной лояльности";
            }
        }
        private void NextQuestion(int num)
        {
            if (num < 10)
            {
                label2.Text = (n + 1).ToString() + "/10";
                label3.Text = questions[n];
                radioButton1.Text = answer1[n];
                radioButton2.Text = answer2[n];
                radioButton3.Text = answer3[n];
            }
            if (num == 10)
                ShowAnswer(points);
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            n++;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (!radioButton1.Checked && !radioButton2.Checked && !radioButton3.Checked)
            {
                MessageBox.Show("Выберите один из вариантов ответа");
                return;
            }
            if (radioButton1.Checked)
            {
                NextQuestion(n);
            }
            else if (radioButton2.Checked)
            {
                points++;
                NextQuestion(n);
            }
            else if (radioButton3.Checked)
            {
                points = points + 2;
                NextQuestion(n);
            }
        }


        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();
            MainWindow main = new MainWindow();
            main.Show();
        }
    }
}
