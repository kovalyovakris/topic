using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace тема2
{
    public partial class Topic7Test1 : Form
    {
        private int n = 0;
        private int points = 0;
        private String[] questions = new string[10] {
                "Какой подход наиболее эффективен для формирования команды\n"+"с разнообразными навыками?",
                "Какой метод лучше всего использовать для повышения командного духа?",
                "Как следует управлять распределением задач внутри команды\n"+"для достижения максимальной эффективности?",
                "Как лучше всего обеспечивать, чтобы члены команды понимали\n"+"общие цели и задачи проекта?",
                "Как лучше всего справляться с конфликтами между членами команды?",
                "Какой способ наиболее эффективен для обеспечения выполнения\n"+"сроков проекта?",
                "Какую роль играет обратная связь в процессе создания\n"+"эффективной команды?",
                "Как лучше всего подходить к созданию и поддержанию позитивной\n"+"рабочей атмосферы?",
                "Какой метод лучше всего использовать для развития и повышения\n"+"квалификации членов команды?",
                "Как следует реагировать на предложения по улучшению\n"+"работы от членов команды?"
        };
        private String[] answer1 = new string[10] {
            "Набрать сотрудников с одинаковыми навыками для\n"+"обеспечения однородности",
            "Разделить команду на подгруппы и установить\n"+"между ними конкуренцию",
            "Назначать задачи случайным образом, чтобы поддерживать интерес",
            "Оставить цель проекта открытой, полагаясь\n"+"на интуицию команды",
            "Игнорировать конфликты и надеяться, что они\n"+"разрешатся сами собой",
            "Предоставить команде полную свободу в определении\n"+"сроков без жесткого контроля",
            "Обратная связь не важна, если сотрудники\n"+"выполняют свои задачи",
            "Сосредоточиться на результатах и игнорировать личные\n"+"отношения внутри команды",
            "Оставить развитие сотрудников на их усмотрение\n"+"без дополнительной поддержки",
            "Игнорировать предложения, если они не соответствуют\n"+"текущему плану",
        };
        private String[] answer2 = new string[10] {
            "Выбирать сотрудников исходя из их личных предпочтений,\n"+"независимо от их профессиональных навыков",
            "Позволить команде самостоятельно находить способы\n"+"повышения командного духа",
            "Доверять задачу тому, кто первым заявил о готовности её выполнить",
            "Передать цели проекта только руководителю и ожидать,\n"+"что команда их поймет",
            "Переместить членов команды в разные группы,\n"+"чтобы избежать конфликтов",
            "Установить фиксированные сроки и строго контролировать\n"+"их выполнение",
            "Обратная связь необходима только для выявления\n"+"и исправления ошибок",
            "Проводить мероприятия только в случае серьезных\n"+"проблем с атмосферой",
            "Использовать обучение только в случае выявления\n"+"серьезных недостатков в работе",
            "Принимать предложения только после обязательного одобрения\n"+"со стороны руководства",
        };
        private String[] answer3 = new string[10] {
            "Сформировать команду, включающую специалистов с разными\n"+"навыками и опытом для максимального охвата задач",
            "Организовать регулярные командные мероприятия и совместные\n"+"обсуждения для улучшения взаимодействия",
            "Распределять задачи в зависимости от индивидуальных сильных\n"+"сторон и компетенций каждого члена команды",
            "Регулярно проводить встречи для обсуждения целей и обновлений\n"+"по проекту, чтобы поддерживать все в курсе",
            "Провести конструктивные переговоры, чтобы понять\n"+"и разрешить источник конфликта",
            "Определить реалистичные сроки и регулярно отслеживать прогресс\n"+"с учетом возникающих проблем",
            "Регулярная обратная связь помогает команде понимать свои сильные\n"+"и слабые стороны, что способствует улучшению работы",
            "Поощрять открытое общение, поддержку и признание\n"+"достижений сотрудников",
            "Предоставлять возможности для обучения и карьерного роста,\n"+"поддерживая их развитие",
            "Рассматривать предложения и внедрять те, которые могут улучшить\n"+"работу команды и проекта",
        };
        public Topic7Test1()
        {
            InitializeComponent();
            label3.Hide();
            groupBox1.Hide();
            button2.Hide();
            button3.Hide();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            label2.Text = (n + 1).ToString() + "/10";
            button1.Hide();
            label3.Visible = true;
            label3.Text = questions[n];
            radioButton1.Text = answer1[n];
            radioButton2.Text = answer2[n];
            radioButton3.Text = answer3[n];
            groupBox1.Visible = true;
            button2.Visible = true;
            n++;
        }
        private void ShowAnswer(int p)
        {
            label2.Hide();
            groupBox1.Hide();
            button2.Hide();
            if (points <= 5)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Вам следует улучшить подходы к созданию и управлению\n" +
                "командой. Сосредоточьте внимание на эффективной коммуникации и\n"+
                "развитии команды";
            }
            else if (points >= 6 && points <= 12)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Вы применяете некоторые хорошие методы, но есть\n" +
                "возможности для улучшения в управлении и взаимодействии\n"+
                "внутри команды";
            }
            else if (points >= 13 && points <= 16)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                "Ваши подходы к созданию эффективной команды весьма\n" +
                "эффективны, но всегда можно найти способы для\n" +
                "дополнительного улучшения";
            }
            else if (17 <= points && points <= 20)
            {
                label3.Text = $"Ваш результат: {points} баллов\n\n" +
                    "Вы отлично справляетесь с созданием и управлением\n" +
                    "эффективной командой, применяя продуманные стратегии и подходы";
            }
            button3.Visible = true;
        }
        private void NextQuestion(int num)
        {
            if (num < 10)
            {
                label2.Text = (n + 1).ToString() + "/10";
                label3.Text = questions[n];
                radioButton1.Text = answer1[n];
                radioButton2.Text = answer2[n];
                radioButton3.Text = answer3[n];
            }
            if (num == 10)
                ShowAnswer(points);
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            n++;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (!radioButton1.Checked && !radioButton2.Checked && !radioButton3.Checked)
            {
                MessageBox.Show("Выберите один из вариантов ответа");
                return;
            }
            if (radioButton1.Checked)
            {
                NextQuestion(n);
            }
            else if (radioButton2.Checked)
            {
                points++;
                NextQuestion(n);
            }
            else if (radioButton3.Checked)
            {
                points = points + 2;
                NextQuestion(n);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            this.Hide();
            Topic7Test2 test2 = new Topic7Test2();
            test2.Show();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();
            MainWindow main = new MainWindow();
            main.Show();
        }
    }
}
